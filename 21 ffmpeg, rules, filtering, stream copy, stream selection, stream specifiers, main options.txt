1. ffmpeg	https://ffmpeg.org/ffmpeg.html
	ffmpeg [global_options] {[input_file_options] -i input_file} ... {[output_file_options] output_file} ...
	rules
		reads from an arbitrary number of input 'files', specified by -i
			which can be regular files, pipes, network streams, grabbing devices, etc

		writes to an arbitrary number of output 'files'
			anything found on the command line which cannot be interpreted as an option is considered to be an output filename

		Each input or output file can contain any number of streams of different types			video/audio/subtitle/attachment/data

		Selecting which streams from which inputs will go into which output 
			is either done automatically or with the -map option

		to refer to a file, use 0-based indices
			2:3 refers to the 4th stream in the 3rd file

		options are applied to the next specified file
			except the global options

	transcoding process
		input file -demuxer-> encoded data packets -decoder-> decoded (uncompress) frames
		raw frames can be processed by filtering
		raw frames -encode-> encoded data packets -muxer-> output file (e.g. mp4, flv file)

2. filtering
	simple filtergraphs
		are those have exactly one input and output, both of the same type
		configured with the per-stream -filter option
			(with -vf and -af aliases for video and audio respectively)

	complex filtergraphs
		those cannot be described as simply a linear processing chain applied to one stream
			when there are more than one input and/or output
			or when output stream type is different from input
		configured with -filter_complex option
			note that this option is global

3. stream copy
	by supplying the 'copy' parameter to the -codec option
		makes ffmpeg omit the decoding and encoding step
		so it does only demuxing and muxing
	useful for changing the container format or modifying container-level metadata
	might not work in some cases because of many factors
		filters are not available as well

4. stream selection
	by default, ffmpeg includes only one stream of each type present in the input files and adds them to each output file
		the video with the highest resolution
		the audio with the most channels
		the first subtitle
	
	-vn/-an/-sn/-dn
		disables some of the defaults
	-map
		full control

5. options
	rules
		units
			K, M, G		// powers of 1000
			Ki		// powers of 1024
			KiB		// multiples the value by 8
		boolean
			-foo		// true
			-nofoo		// false
	
	stream specifiers, used to precisely specify which stream(s) a given option belongs to
		stream_index
			-threads:1 4	// set the thread count for the second stream to 4
		stream_type[:stream_index]
			-codec:a ac3	// set the codec of all audios to ac3
			-b:a:1 128k	// set the second audio stream's bitrate to 128k
			s for subtitle, d for data, t for attachments
		p:program_id[:stream_index]
		#stream_id or i:stream_id
		m:key[:a=value]
			match the stream with the metadata tag 'key' having the specified value
		u
			matches streams with usable configuration, the codec must be defined and the essential information such as video dimension or audio sample rate must be present
	
	generic options
		-help [arg]
		-version
		-codecs
		-encoders
		-formats	// e.g. mp3, mp4, flv...
		-filters
		-report
		...
	
	AVOptions
		options provided directly by the libavformat, libavdevice and libavcodec libraries
		note: boolean should be used in this way: -foo 0/-foo 1
	
	main options
		-f fmt (input/output)
			force input or output file format
			The format is normally auto detected for input files and guessed from the file extension for output files, so this option is not needed in most cases

		-y (global)
			overwrite output files without asking

		-stream_loop number (input)
			set number of times input stream shall be looped
			0 means no loop, -1 means infinite loop

		-codec[:stream_specifier] codec (input/output, per-stream)
			or -c
			ffmpeg -i INPUT -map 0 -c:v libx264 -c:a copy OUTPUT
				copy means that the stream (here, the audio streams) is not to be re-encoded
			ffmpeg -i INPUT -map 0 -c copy -c:v:1 libx264 OUTPUT
				copy all the streams except the second video, which will be encoded with libx264 
				(for each stream, the last matching -c option is applied)

		-t duration (input/output)

		-fs limit_size (output)
			set the file size limit

		-metadata[:metadata_specifier] key=value (output, per-metadata)
			ffmpeg -i INPUT -metadata title='my title' OUTPUT
			ffmpeg -i INPUT -metadata:s:a:0 language=eng OUTPUT	// subtitle

		-target type (output)
			Specify target file type (vcd, svcd, dvd, dv, dv50)
				type may be prefixed with pal-, ntsc- or film- to use the corresponding standard
			All the format options (bitrate, codecs, buffer sizes) are then set automatically
		
		-filter[:stream_specifier] filtergraph (output, per-stream)
			a simple filtergraph have a single input and a single output of the same type of the stream. 
			the input is associated to the label in, and the output to the label out
		-filter_script[:stream_specifier] filename (output, per-stream)

		-attach filename (output)
			attachments are implemented as a specific type of stream
				so this option will add a new stream to the file
			e.g. add a font file
				ffmpeg -i INPUT -attach DejaVuSans.ttf -metadata:s:2 mimetype=application/x-truetype-font out.mkv
		...